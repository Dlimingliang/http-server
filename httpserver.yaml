# 应用上云yaml编写实现目标
# 1. 高可用
# - replicas设置为3，多副本保证一个pod挂掉不会影响整体服务.
# - 设置podAntiAffinity。保证pod被调度到多个节点上，避免节点不可用影响整体服务,这里因为本地环境只有一个节点，故设置了软亲和性，避免pod处于pending状态.
# 2. 非root用户运行
# - securityContext 指定用户和组,并且设置不允许提升权限allowPrivilegeEscalation=false
# 3. 资源需求和Qos保证
# - httpserver为核心应用，所以qos为Guaranteed。设置资源request=limit
# 4. 升级策略
# - 设置滚动升级策略，确保在升级过程中服务不会全部不可用
# - pdb设置 保证在自愿中断的场景下服务不受影响
# 5. 配置和代码分离
# - 环境变量 httpserver里面获取了环境变量。 这里我们使用configmap设置环境变量。
# 6. 优雅启动
# - 设置readinessProbe,避免应用没有准备就绪就被接收客户端流量
# 7. 优雅终止
# - 在main.go中，捕获sigterm,然后调用服务地shutdown方法关闭所有开启的监听器，并且确保活跃连接的正常返回。处理完成之后再退出主程序。
# - 但是在shutdown之前，我们希望endpoint的变更传遍kube-proxy、ingress、servicemesh等组件，故设置prestop，等待15秒在shutdown。
# 8. 探活
# - 设置startupProbe,避免应用启动过慢，确保应用没在启动之前就被kubelet重启
# - 设置livenessProbe,保证应用不活地时候，kubelet重启应用
# 9. 暴露给集群内部用户
# - 创建对应service
# 10. 暴露到集群外部
# - 创建对应ingress

# tls secret
apiVersion: v1
kind: Secret
metadata:
  name: cncamp-tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREVENDQWZXZ0F3SUJBZ0lKQUxBZCtHTVBueFR3TUEwR0NTcUdTSWIzRFFFQkN3VUFNQjB4Q2pBSUJnTlYKQkFNTUFTb3hEekFOQmdOVkJBb01CbU51WTJGdGNEQWVGdzB5TVRFeE1qUXdPRE0wTkRSYUZ3MHpNVEV4TWpJdwpPRE0wTkRSYU1CMHhDakFJQmdOVkJBTU1BU294RHpBTkJnTlZCQW9NQm1OdVkyRnRjRENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVpNaExjb0IrRXlnd1BhS2o1K0VFdFBRVWxLcDFtSktGZEMKM3lORTBCNEpDYWpsYzdYNVdIdS9hZS80bHdTM3ExelNJSHp6RVhBa3JqRXhJZ3lBRWp6UCtWSzFpbnFNYzhQTApmT3lmdXVoNzhWNnRLZXB0QXJzeGNFSnhyWlJVMnRUanRYYmlXQ2piQ09lLzQ2RUdGSEp0UTluaFRRdjFNRVlxCjZlVGdmeEhySHRaZldsVmg5REQxc2liUmgvT3c1bVJPbDR1SktZa0x6WEQ0RGJ5Nk1hRFovbTFjQmkzSWZUWFEKZW9nSHdDN3hNTzB0LzU0dGNnTUtMWlpmM0VsNXlneHB0bDVwM0I2b0c4TmRQTnR5VEdPbFFsblRKRzd0YklNeApxOE02WVI2N1RLWEF4Wk9yaTgvdUVnOVNkczBqMVRRZ0FudWFsREpzMC8raUpMMWl3dDBDQXdFQUFhTlFNRTR3CkhRWURWUjBPQkJZRUZPekpIVXdVWVRWQStXR1U1NG14SXVJbndrcXVNQjhHQTFVZEl3UVlNQmFBRk96SkhVd1UKWVRWQStXR1U1NG14SXVJbndrcXVNQXdHQTFVZEV3UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBQ2JqUnh1N2RxRGp3NWlQckZFSHBPTlh1SnIyWkMwVUc1N2l5YnZ2V1BoZ2VOeDNrWlc4MFpOaHh0ZGZNTFZEClF2ZjQzNkk3L1ZZcEtwS1V5akhUakVPQzgwK29NeUl3YU9Kc3hZZW9MU01qMHRxZHBxS01KTUtDUEFPWHFqSS8KLzRESWEzOFBPNlprL2FSNDN0Z2RKUGRRZHF6MEtURFB0YitzMGlFN2VFd1QzRDBCN2xYUUdua21DSXg2VlAxWgowSTBxbEloYkl1R0krUjhYZ0Y4SzZVSGlQV0lncjJCWjYveVlhYXppZnNUM3d5eVBvTUdCWlYxNUlWWlIrVldvClowT01sYjZqZ1FoNSsxRC96VER6c2ovaFA0ekFvcVBXenY0T3M1UCtUckRBMGRwcVd5Z1BaMVBkOHNHczNQekoKWXJoT1RFbmxwaExaS04vOWFhdklhZVE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRREdUSVMzS0FmaE1vTUQKMmlvK2ZoQkxUMEZKU3FkWmlTaFhRdDhqUk5BZUNRbW81WE8xK1ZoN3YybnYrSmNFdDZ0YzBpQjg4eEZ3Sks0eApNU0lNZ0JJOHovbFN0WXA2akhQRHkzenNuN3JvZS9GZXJTbnFiUUs3TVhCQ2NhMlVWTnJVNDdWMjRsZ28yd2puCnYrT2hCaFJ5YlVQWjRVMEw5VEJHS3VuazRIOFI2eDdXWDFwVllmUXc5YkltMFlmenNPWmtUcGVMaVNtSkM4MXcKK0EyOHVqR2cyZjV0WEFZdHlIMDEwSHFJQjhBdThURHRMZitlTFhJRENpMldYOXhKZWNvTWFiWmVhZHdlcUJ2RApYVHpiY2t4anBVSloweVJ1N1d5RE1hdkRPbUVldTB5bHdNV1RxNHZQN2hJUFVuYk5JOVUwSUFKN21wUXliTlAvCm9pUzlZc0xkQWdNQkFBRUNnZ0VBS1drVlZnSmdFdUV2aHdCcVRmNlpmSUNpaTZHeGJQczlsMnQ1bWEzbklENlcKNjlSdTQ1T2NyTXIrWG9TMVZPRGVRbFlIUHRDcjFaVnpZd1oxcTlLYS9HUWFGdkdlWjVVcEg3eEE3RkUzQVJIUgpDQXAxZEdVcmF0Z2FMMlg1Nzc0QXJQQ1lscWtSN0FaQng5UEV2MzI3aTJIU0I1QUxQUElKRUw0cGRnaUR3TVBRCmpLVW5VSjE2YXlROWwzajhmNHByQTZHTE9MZDI1VGU5K2ZmeSs3L3FBam1VRjhtVlpaS0FiY2hodjJpS01rTnoKQ1BOQVJQVXBULzdjOUlLU0NMbTRGeGJoSncwUXMrOWFFL3REQ2trRXdmdzZRQ0RjT3ZFVFdPazEwbHhUWDhNSwowQXVVaFQvRnlOSWNYVHRrbWRLM2Z3NmROa0hsWmhxdkQ0Y2tESXFrYVFLQmdRRDFXL25yTXNOWHZyMUFYMzdQClVIRnV5NGhCMUFrRjF0S3UxMHB0cStQMWxLVGJvNm00TThORGxoQUhyMEdtK0VncmFVQWxwdjE4Q0ZyVUFITTMKaXhQajFTbFhIWGNkWW1tT3IzcE1qTjREd3g0aitxd1lBYTZEWlVYcU81U3NBRTFzRXhITnY2YUo3aHc2WnhsdApnd1NhUVRoSXR5TXhBYjVmK3dxcld1LzRwd0tCZ1FETzVoRzF6dGUzdFBMUFQybGtmZHVTSHJHaGdXMzNGeEhrCkdJQk5wL1ZkVnlZRUg0V3dhMkJJUHdmTW1UVkFvUS96Y0VpQyszWjVmaTMzZURxMWhFM2QwaHpkY01yTGxmanUKRHVMRkd6YXB3Mm5TWW1Mdm45WjBnalZBL3RXWkR6SUNlK1NrUE5hWldKbVhuMllCdjAzdWFVVVk0dEtzN1IzWApBSXd2SVhRVTJ3S0JnUUNPaEMxSGk0WGh5cjM4elR0SVNpNkpMNW5tdXJXKytZZ0kzSzZ6dzFzM0EyODYwUGE5Ck12dmhueUdTaFI3NlVFOERRREJ0Ym5EZ2dhM1laS2FJQmJXNDZkRUljK29EWEcxNTNyMklCMjdSK3B6Z1F6T0IKQWtFT3UxMS83N21zcXNSTjJVbkhHK0l0VGV5QmsrODJLQnNkU25MWjhkNTBFZEkxeUFqcmZYZlVFd0tCZ1FDOAppYWt2M09wMHpKN0xUWmxENnZEUXFjbkMzQmdpSjFLMVlhSmhvYUdWU2xvcFBiUnMvSnhEbWJSNHZGQnJzWm5BCmc5eUFCN2lCby9zdFhORmJJZEozUmdYcHdPUDhPNUVaRmxXTnVtdklyWHRjTFMzdElPR2pVQmhKUHkvVUI2WFIKMzZhT0I2YWpITHJ5RVY0NlQyTXIwNkFVdW5XekFXekV4UW41MU9sY0t3S0JnRlVNRm16Y3ZBM0NodE02N05uUgorMVFRUVJheW1LRFZZSUZvNGJHQUJqWEprRmcwQnRqaWx4QitLU2hKS2JITGJBNE1TNklpc0tRcE9IbGRMK2crCkFkejZUNWNlekwxdzJWTlpQbExCanFGKy9xWjZOWnoxUkEzcFhXQWpmd0ZVSWZqTDQ2MnNabVBOemFKZEc1S2kKVml2Y1FGMEhmdFkzVDNYdWJtalQxQW5KCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
type: kubernetes.io/tls

---
# ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gateway
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
    - hosts:
        - izaodao.com
      secretName: cncamp-tls
  rules:
    - host: lml-cncamp.izaodao.com
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: httpserver
                port:
                  name: http-port

---
# service
apiVersion: v1
kind: Service
metadata:
  name: httpserver
  labels:
    app: httpserver
spec:
  selector:
    app: httpserver
  ports:
    - port: 9090
      targetPort: 9090
      name: http-port

---
# PDB
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: httpserver-pdb
spec:
  maxUnavailable: 25%
  selector:
    matchLabels:
      app: httpserver

---
# env configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: httpserver-env
data:
  VERSION: v1.0

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpserver
  labels:
    app: httpserver
spec:
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: httpserver
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: httpserver
    spec:
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - httpserver
                topologyKey: kubernetes.io/hostname
              weight: 100
      securityContext:
        runAsUser: 5000
        runAsGroup: 5000
      containers:
        - name: httpserver
          image: limingliang/httpserver:v20.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9090
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  key: VERSION
                  name: httpserver-env
          securityContext:
            allowPrivilegeEscalation: false
          resources:
            requests:
              cpu: 300m
              memory: 300Mi
            limits:
              cpu: 300m
              memory: 300Mi
          startupProbe:
            httpGet:
              path: /healthz
              port: 9090
            periodSeconds: 3
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9090
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 9090
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          lifecycle:
            preStop:
              httpGet:
                path: /preStop
                port: 9090